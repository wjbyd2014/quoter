Function countStock(path,date1,date2);
Begin
    if not path then
        return '非法路径';
        
    bkFileList := iterDir(path);
    fileNum := length(bkFileList);
    
    if fileNum = 0 then
       return path + '中没有发现任何stock文件';

    arrBk := parseFile(bkFileList, fileNum);

    bkZf := array();
    bkNum := length(arrBk);
    for d := date1 to date2 do
    begin
        for i := 0 to bkNum - 1 do
        begin
            bkInfo := arrBk[i];
            zf := countZF(bkInfo['stocks'], d);
            bkZf[i] := array('bkType':bkInfo['bkType'], 'bkName':bkInfo['bkName'], 'bkZF':zf);
        end
        
        echo 'done';
    end
End;

Function countZF(stocks, date);
Begin
    sumzf := 0.0;
    num := 0;
    stockNum := length(stocks);
    for i := 0 to stockNum - 1 do
    begin
        if not stocks[i] then
            continue;

        stock := str2array(stocks[i], ":");
        stockName := stock[0];
        stockCode := stock[1];

        if not spec(IsTradeDay(inttodate(date)), stockCode) then
            continue;
             
        zf := getZF(date, stockCode);
        num += 1;
        sumzf += zf;
    end
    return sumzf / num;
End;

// 计算股票涨幅
Function getZF(date, stockCode);
Begin
    SetSysParam(PN_Stock(), stockCode);
    EndT:=inttodate(date);
    return StockZf4(EndT);
End;

// 遍历目录中的stock文件
Function iterDir(dirPath);
Begin
    arrFiles := rdo2 filelist("", dirPath + '\\*.stock');
    result := array();
    for i := 0 to length(arrFiles) - 1 do
    begin
        result[i] := dirPath + '\\' + arrFiles[i]['FileName'];
    end
    return result;
End;

Function parseFile(stockFileList, fileNum);
begin
    retArray := array();
    for i := 0 to fileNum - 1 do
    begin
        fileName := str2array(stockFileList[i], '\\')[3];
        arr := str2array(fileName, '.');
        bkType := arr[0];
        bkName := arr[1];

        size := rdo2 filesize("", stockFileList[i]);
        retRead := rdo2 readFile(rwraw(), "", stockFileList[i], 0, size, data);
        if not retRead then
            return;

        if not data then
           return;

        stocks := str2array(data, ";");
        retArray[i] := array('bkType':bkType, 'bkName':bkName, 'stocks': stocks);
    end
    return retArray;
End;
